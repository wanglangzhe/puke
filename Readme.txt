version-2.0
2016.09.24
THX JH

对游戏规则的修改：每局游戏都必须有庄家和主牌，否则该局游戏中许多决策都会变得十分单一。若游戏无人叫主牌，则裁判随机选取一个花色做主牌，同时在第一局游戏中，拥有该花色级牌的玩家做庄家（因为不存在上一局的赢家）.

程序中的类声明在附件的源程序中已给出（包括必要注释），以下内容为总体概述。

程序实现有一个结构体和两个类,分别是卡牌,玩家和裁判.

玩家是一个基类,每位同学都要定义一个继承玩家Player的子类,子类的名字为Player+学号,如Player14348000(为了区分不同同学的类).
定义的子类需要实现两个虚函数askMainCard(是否叫主牌)和discard(出牌),具体见代码.裁判调用玩家的接口就只有这两个函数. 

另外,为了避免可能发生的影响，每位同学实现的Player子类中不能声明全局变量和全局函数! 

每一个小组所需提交的内容如附件中的四个源程序所示
1、每位同学需独自完成并提交名为"playerxxxxxxxx.cpp"的文件,里面包括子类Playerxxxxxxxx的声明和定义. 
2、每个小组需共同完成并提交一个裁判程序（judge.h和judge.cpp），里面包括Judge类的声明和定义.
3、每个小组需共同完成并提交一个main函数，用于运行游戏.

每位同学必须按照上述方式提交程序，以便测试.
 
裁判保存游戏的所有信息,在游戏过程中裁判会调用玩家的那两个虚函数获取玩家的行动,并且更新数据.
调用函数时,裁判不主动向玩家提供游戏信息,而是提供一套接口,让玩家根据自己的需求调用相应函数来获取游戏信息.

每个小组可以根据自己的设计修改裁判类的数据成员或添加成员函数,但必须确保裁判提供给玩家的接口不被修改.


游戏一轮的基本流程:
1.发牌 
裁判洗牌,并且一张一张地分发给每个玩家,同时调用玩家的askMainCard函数.
如果有玩家叫主牌,则后面无需继续调用这个函数,直接发完牌.  
2.出牌
裁判开始一轮轮的出牌.第一轮由叫主牌方先出牌,以后由前一轮胜出者先出.出牌按ID递增顺序.
裁判调用玩家的discard函数来让玩家出牌,玩家决策后返回一张牌给裁判. 


相关术语:
1.庄家 
前一轮赢的就是庄家,该轮赢的玩家本身就是庄家才能升级.
2.等级(级别) 
每个玩家都有等级,一开始是2,等级升到14后该玩家取得最终胜利. 
3.级牌
数字为庄家等级的四张牌为级牌,只有级牌才有可能成为主牌. 
4.主牌
每轮游戏只有一张主牌,为发牌过程中玩家叫出的某一张级牌.
5.分数牌
5,10,K为分数牌,5有5分,10和K有10分.一个回合出牌最大值能获得这个回合出的所有分数牌. 
 

特殊规定:
1.违规行为：
在叫主牌的时候玩家做出非法操作时(比如他没有这个花色),裁判会认为他不叫主牌.
在出牌时,如果玩家不按照规则出牌,裁判会随便替他出一张合法的牌.

2.违规处理：
出现任何一种上述违规行为，裁判的行为均是使游戏符合规则的继续进行下去，但游戏结束后，该玩家的得分不计，并降一级.
如果4个玩家都出错了,请先调试好程序. 
（在实现时,如果出现违规,应输出有关信息,以便调试）
 
3.同分
当该轮游戏结束后如果最高分出现同分{如果最高分里有庄家,则按庄家赢,否则所有玩家不升级,庄家不变.}
 
4.没玩家叫主牌
若游戏无人叫主牌，则裁判随机选取一个花色做主牌，拥有该花色级牌的玩家先出牌。若是第一局游戏，拥有该花色级牌的玩家做庄家（因为不存在上一局的赢家）.

 
5.第一轮的庄家
第一轮谁叫主牌,谁就是庄家. 


代码编码格式:ANSI(出现中文乱码导致无法查看注释可试试用不同编辑器打开)


